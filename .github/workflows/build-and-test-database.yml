name: Build, Test, and Push to GHCR

on:
  workflow_dispatch:

jobs:
  setup-database:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3



    - name: Log in to GitHub Container Registry
      run: |
        echo "${{ secrets.GH_GHCR }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build PostgreSQL with pgroonga
      run: |
        docker build -t custom-postgres-db -f Dockerfile-postgres .

    - name: Run PostgreSQL container
      run: |
        docker run -d --name test-db \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_DB=luoxu_db \
            -p 5432:5432 \
            custom-postgres-db
        sleep 10 # 等待数据库服务启动

    - name: Test pgroonga setup
      run: |
        docker exec -i test-db psql -U postgres -d luoxu_db -c "SELECT * FROM pg_extension WHERE extname = 'pgroonga';"

    - name: Stop and remove container
      run: |
        docker stop test-db
        docker rm test-db

    - name: Tag Docker image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        docker tag custom-postgres-db ghcr.io/${REPO_OWNER}/${REPO_NAME}/luoxu-postgres-db:latest

    - name: Push Docker image to GHCR
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        docker push ghcr.io/${REPO_OWNER}/${REPO_NAME}/luoxu-postgres-db:latest
